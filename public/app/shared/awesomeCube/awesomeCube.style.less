@squareL: 80px;

.aws-cube {
  position: relative;
  margin: 0 auto;
  width: @squareL;
  height: @squareL;
  transform-style: preserve-3d;
  .aws-cube-shape {
    position: relative;
    width: @squareL;
    height: @squareL;
    transform-style: preserve-3d;
    div {
      position: absolute;
      width: @squareL;
      height: @squareL;
      border: 1px solid white;
      background: url(/assets/images/PATTERN.png);
      background-size: 50%;
      opacity: .7;
      overflow: hidden;
      /*transition: transform 1s;*/
      transition: transform 0.5s;
      transition-delay: 0s;
      &.front {
        transform: translateZ(@squareL/2);
        cursor: pointer;
      }
      &.right {
        transform: rotateY(90deg) translateZ(@squareL/2);
      }
      &.back {
        transform: rotateY(180deg) translateZ(@squareL/2);
        span {
          font-size: 36px;
        }
      }
      &.left {
        transform: rotateY(270deg) translateZ(@squareL/2);
      }
      &.top {
        transform: rotateX(90deg) translateZ(@squareL/2);
      }
      &.bottom {
        transform: rotateX(270deg) rotateY(0deg) translateZ(@squareL/2);
      }
      span {
        display: block;
        color: black;
        text-decoration: none;
        text-align: center;
        
        width: @squareL;
        height: @squareL;
        line-height: @squareL;

        font-size: 14px;
      }
      img {
        /*height: @squareL;
        width: @squareL;*/
        height: 100%;
        width: 100%;
      }
    }
  }
  
  &.cube-opened {
    .aws-cube-shape {
      .front, .right, .back, .left, .top, .bottom {
        transition: transform 0,5s linear;
        transition-delay: 0.5s;
        &:hover {
          opacity: 1;
        }
      }
      .front {
        transform: translateZ(@squareL);
        cursor: auto;
      }
      .right {
        transform: rotateY(0deg) translate3d(@squareL, 0, @squareL);
      }
      .top {
        transform: rotateX(0deg) translate3d(@squareL, @squareL, @squareL);
        cursor: pointer;
      }
      .left {
        transform: rotateY(0deg) translate3d(@squareL, 2*@squareL, @squareL);
        cursor: pointer;
      }
      .bottom {
        transform: rotateY(0deg) translate3d(@squareL, 3*@squareL, @squareL);
        cursor: pointer;
      }
      .back {
        transform: rotateY(0deg) translate3d(2*@squareL, 3*@squareL, @squareL);
        cursor: pointer;
        &:hover {
          text-shadow: 0 0 5px rgb(255,0,0);
        }
      }
      .expand {
        transition: opacity 0.5s linear;
        transition-delay: 0s;
        transform: rotateX(0deg) translate3d(@squareL*3, 0, @squareL);
        width: 666px;
        height: 666px;
        opacity: 1;
        background: white;
        box-shadow: rgb(124, 107, 107) 0 0 20px;
      }
    }
  }

  &:not(.cube-opened){
    .aws-cube-shape {
      animation: spinForEver 4s linear infinite;
    }
    .aws-cube-shape:hover {
      cursor: pointer;
    }
  }
  
  &.spin {
    .aws-cube-shape {
      animation: spin 0.5s linear;
    }
  }

  &.roll-left {
    .aws-cube-shape {
      animation: rollLeft 0.5s linear;
    }
  }

  &.roll-right {
    .aws-cube-shape {
      animation: rollRight 0.5s linear;
    }
  }
}

@keyframes spin {
  from {
    transform: rotateX(-10deg) rotateY(0deg);
  }
  to {
    transform: rotateX(0deg) rotateY(360deg);
  }
}

@keyframes spinForEver {
  0% {
    transform: rotateX(-10deg) rotateY(0deg) rotateZ(0deg);
  }
  50% {
    transform: rotateX(-10deg) rotateY(180deg) rotateZ(180deg);
  }
  100% {
    transform: rotateX(-10deg) rotateY(360deg) rotateZ(360deg);
  }
}

@keyframes rollLeft {
  from {
    transform: rotateZ(-180deg);
  }
  to {
    transform: rotateZ(-360deg);
  }
}

@keyframes rollRight {
  from {
    transform: rotateZ(180deg);
  }
  to {
    transform: rotateZ(360deg);
  }
}
